swagger: "2.0"
info:
  version: 1.0.0
  title: "get-my-products"
  description: Coca Cola's product catalog API
  termsOfService: http://cocacola.com/
  contact:
    name: Coca Cola API Team
    email: foo@cocacola.com
    url: http://cocacola.com/
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: catalog.dev.cocacola.com
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /products:
    get:
      description: |
        Returns all products from the system that the user has access to
      operationId: findProducts
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: product response
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new product in the store.  Duplicates are allowed
      operationId: addProduct
      parameters:
        - name: product
          in: body
          description: Product to add to the store
          required: true
          schema:
            $ref: '#/definitions/NewProduct'
      responses:
        200:
          description: product response
          schema:
            $ref: '#/definitions/Product'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /products/{id}:
    get:
      description: Returns a product based on a single ID, if the user has access to the product
      operationId: find product by id
      parameters:
        - name: id
          in: path
          description: ID of product to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: product response
          schema:
            $ref: '#/definitions/Product'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single product based on the ID supplied
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: ID of product to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: product deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Product:
    allOf:
      - $ref: '#/definitions/NewProduct'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  NewProduct:
    required:
      - name
    properties:
      name:
        type: string
      tag:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string